
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_auto_examples/first_steps_create_datacube.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download__auto_examples_first_steps_create_datacube.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__auto_examples_first_steps_create_datacube.py:


First steps to create a datacube
===============================================================

To create a datacube using Earth Data Store from EarthDaily you have two possibilities.

The first one is the more classic one, you request items, then you build your datacube, and then you can mask pixels using a cloudmask asset.
The second one is the most turnkey one, the one we recommend, it allows to do all the process at once.

.. GENERATED FROM PYTHON SOURCE LINES 13-15

Import librairies
-------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 15-21

.. code-block:: Python


    from matplotlib import pyplot as plt

    import earthdaily
    from earthdaily import EarthDataStore, datasets








.. GENERATED FROM PYTHON SOURCE LINES 22-23

Loading geometry

.. GENERATED FROM PYTHON SOURCE LINES 23-26

.. code-block:: Python


    geometry = datasets.load_pivot()








.. GENERATED FROM PYTHON SOURCE LINES 27-29

Init earthdatastore with environment variables or default credentials
----------------------------------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 29-32

.. code-block:: Python


    eds = EarthDataStore()



.. rst-class:: sphx-glr-script-out

.. code-block:: pytb

    Traceback (most recent call last):
      File "/private/var/folders/_t/czv_cfrd613_6_gd_p8qpqd80000gp/T/tmpmap_d3kq/7261d0bf6bc6b22a0278281791f6623d19ddf89a/examples/first_steps_create_datacube.py", line 30, in <module>
        eds = EarthDataStore()
              ^^^^^^^^^^^^^^^^
      File "/private/var/folders/_t/czv_cfrd613_6_gd_p8qpqd80000gp/T/tmpmap_d3kq/7261d0bf6bc6b22a0278281791f6623d19ddf89a/earthdaily/__init__.py", line 51, in EarthDataStore
        return earthdatastore.Auth.from_credentials(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      File "/private/var/folders/_t/czv_cfrd613_6_gd_p8qpqd80000gp/T/tmpmap_d3kq/7261d0bf6bc6b22a0278281791f6623d19ddf89a/earthdaily/earthdatastore/__init__.py", line 464, in from_credentials
        config = cls.read_credentials(
                 ^^^^^^^^^^^^^^^^^^^^^
      File "/private/var/folders/_t/czv_cfrd613_6_gd_p8qpqd80000gp/T/tmpmap_d3kq/7261d0bf6bc6b22a0278281791f6623d19ddf89a/earthdaily/earthdatastore/__init__.py", line 529, in read_credentials
        raise NotImplementedError("Credentials weren't found.")
    NotImplementedError: Credentials weren't found.




.. GENERATED FROM PYTHON SOURCE LINES 33-35

Create datacube (in one step)
--------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 35-51

.. code-block:: Python


    s2_datacube = eds.datacube(
        "sentinel-2-l2a",
        assets=["blue", "green", "red", "nir"],
        intersects=geometry,
        datetime=["2022-08-01", "2022-08-09"],
        mask_with="native",  # equal to "scl" for sentinel-2
        clear_cover=50,
    )

    s2_datacube.clear_percent.plot.scatter(x="time")
    plt.title("Percentage of clear pixels on the study site")
    plt.show()

    s2_datacube.ed.plot_rgb(vmin=0, vmax=0.2, col="time", col_wrap=4)


.. GENERATED FROM PYTHON SOURCE LINES 52-54

Create datacube in three steps
--------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 56-57

Request items

.. GENERATED FROM PYTHON SOURCE LINES 57-64

.. code-block:: Python


    items = eds.search(
        "sentinel-2-l2a",
        intersects=geometry,
        datetime=["2022-08-01", "2022-08-09"],
    )


.. GENERATED FROM PYTHON SOURCE LINES 65-67

Creata datacube (independent from being log into earthdatastore)
We request the "scl" assets which is the native cloudmask

.. GENERATED FROM PYTHON SOURCE LINES 67-72

.. code-block:: Python


    s2_datacube = earthdaily.earthdatastore.datacube(
        items, assets=["blue", "green", "red", "nir", "scl"], intersects=geometry
    )


.. GENERATED FROM PYTHON SOURCE LINES 73-74

Mask datacube

.. GENERATED FROM PYTHON SOURCE LINES 74-86

.. code-block:: Python


    # intersects or bbox are asked in order to compute accurate mask statistics

    s2_datacube = earthdaily.earthdatastore.mask.Mask(s2_datacube, intersects=geometry).scl(
        mask_statistics=True
    )

    s2_datacube = earthdaily.earthdatastore.mask.filter_clear_cover(
        s2_datacube, 50
    )  # at least 50% of clear pixels
    #
    s2_datacube.ed.plot_rgb(vmin=0, vmax=0.2, col="time", col_wrap=4)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.006 seconds)


.. _sphx_glr_download__auto_examples_first_steps_create_datacube.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: first_steps_create_datacube.ipynb <first_steps_create_datacube.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: first_steps_create_datacube.py <first_steps_create_datacube.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: first_steps_create_datacube.zip <first_steps_create_datacube.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
